diff --git a/node_modules/http2-express-bridge/index.d.ts b/node_modules/http2-express-bridge/index.d.ts
index a24a707..73a926c 100644
--- a/node_modules/http2-express-bridge/index.d.ts
+++ b/node_modules/http2-express-bridge/index.d.ts
@@ -8,14 +8,14 @@ declare function http2Express(exp: (typeof express)): Application
 
 
 // Overriding Request and Response types from Express
-declare global {
-    namespace Express {
-        export interface Response extends http2.Http2ServerResponse {
-            push(path: string | string[], rootDir: string): void
-        }
-        export interface Request extends http2.Http2ServerRequest {}
-    }
-}
+// declare global {
+//     namespace Express {
+//         export interface Response extends http2.Http2ServerResponse {
+//             push(path: string | string[], rootDir: string): void
+//         }
+//         export interface Request extends http2.Http2ServerRequest {}
+//     }
+// }
 
 // Oveloading 'createServer' and 'createSecureServer' to accept type Application
 declare module 'http2' {
diff --git a/node_modules/http2-express-bridge/lib/bridge.js b/node_modules/http2-express-bridge/lib/bridge.js
index 79a50b2..c16286e 100644
--- a/node_modules/http2-express-bridge/lib/bridge.js
+++ b/node_modules/http2-express-bridge/lib/bridge.js
@@ -48,9 +48,9 @@
     };
 
     const app = function (req, res, next) {
-      const {
-        socket
-      } = req.httpVersion === '2.0' ? req.stream.session : req; //Checking alpnProtocol for http2
+      // const {
+      //   socket
+      // } = req.httpVersion === '2.0' ? req.stream.session : req; //Checking alpnProtocol for http2
 
       app.handle(req, res, next);
     };
diff --git a/node_modules/http2-express-bridge/lib/initMiddleware.js b/node_modules/http2-express-bridge/lib/initMiddleware.js
index 4b9220c..8300c5c 100644
--- a/node_modules/http2-express-bridge/lib/initMiddleware.js
+++ b/node_modules/http2-express-bridge/lib/initMiddleware.js
@@ -19,14 +19,14 @@
 
   function initMiddleware(app) {
     return function expressInit(req, res, next) {
-      if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express with http2-express-bridge');
+      // if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express with http2-express-bridge');
       req.res = res;
       res.req = req;
       req.next = next;
-      const {
-        socket
-      } = req.httpVersion === '2.0' ? req.stream.session : req; //Checking alpnProtocol for http2
-
+      const { socket } = req.httpVersion === '2.0' && req.stream && req.stream.session ? req.stream.session : req; //Checking alpnProtocol for http2
+      if (socket.alpnProtocol === undefined) {
+        socket.alpnProtocol = 'h2c';
+      }
       if (socket.alpnProtocol && (socket.alpnProtocol === 'h2' || socket.alpnProtocol === 'h2c')) {
         setPrototypeOf(req, app.http2Request);
         setPrototypeOf(res, app.http2Response);
